# Extracted from: //www.rabbitmq.com/install-debian.html

Instalacion en Debian/Ubuntu:

	apt-get install rabbitmq-server (server)
	pip3 install pika (cliente)

Description: 1 publisher publish a tweet with routing_key and n subscribers receive only the tweets
that match a given pattern or binding_key

System overview:
	publisher (P)
	subscriber1 (S1)
	subscriber2 (S2)
	exchange (E)
	Message queues: 
		twitter-pattern1 (S1)
		twitter-pattern2 (S2)


	binding_key
P --> E ------>	|||||||t3|t2|t1| 	--> S1 gets t1, t2
	|	     twitter1		
	|----->	|||||||t3|t2|t1| 	--> S2 gets t1, t3
	binding_key  twitter2		

Observations: 
	You need three consoles, one for each participant

subscriber1:
	python3 subscriber.py binding_key

subscriber2:
	python3 subscriber.py binding_key

where:
	binding_key: a pattern in the format "word1.word2. ... .wordn" 
	word1, word2, wordn could use wildcards

publisher:
	python3 publisher.py <routing_key> <my_tweet>
	where:
		routing_key: a list of words delimited by dots in the format "word1.word2. ... .wordn"


Example: 
	   python3 publisher.py "hoy.cr" "Ven al cine gratis"
	   python3 publisher.py "ma√±ana.madrid" "Ven al teatro por 10 euros"
	   python3 subscriber.py "*.madrid"		
	   python3 subscriber.py "hoy.*"		
